import {
  BrowserNavigatorAdapter,
  BrowserNavigatorContextAdapter
} from 'fengwuxp-browser-router'
import {
  AppRouterMapping,
  NavigatorDescriptorObject,
  RouteConfirmBeforeJumping,
  RouterCommandMethod,
  AbstractAppCommandRouter,
  RouteMapping
} from 'fengwuxp-declarative-router-adapter'
import {MethodNameCommandResolver} from "fengwuxp-declarative-command";
import {createBrowserHistory} from "history";
import {SpringAppRouterInterface} from "./SpringAppRouterInterface";

 {{each routes route index }}
    {{if route.propsType!=null}}
    import { {{route.propsType.name}}{{index}} } from "./AppRouterInterface";
    {{/if}}
 {{/each}}

// 判断是否需要登录
const routeConfirmBeforeJumping: RouteConfirmBeforeJumping = (nextNavigator: NavigatorDescriptorObject) => true;

export const history = createBrowserHistory({basename: "{{routeBasePath}}"});

@AppRouterMapping({
  confirmBeforeJumping: () => routeConfirmBeforeJumping,
  navigatorContextAdapter: () => new BrowserNavigatorContextAdapter(),
  navigatorAdapter: () => new BrowserNavigatorAdapter(history),
  methodNameCommandResolver: () => upperCaseToLeftIncline,
  pathPrefix: "{{routeBasePath}}",
})
class SpringAppRouter extends AbstractAppCommandRouter implements AppRouterInterface {


  {{each routes route index }}
     {{if route.propsType!=null}}
      @RouteMapping('{{route.pathname}}')
      {{route.routeMethodName}}: RouterCommandMethod<Partial<{{route.propsType.name}}{{index}}>>
     {{else}}
      @RouteMapping('{{route.pathname}}')
      {{route.routeMethodName}}: RouterCommandMethod;
     {{/if}}
   {{/each}}
}

export default new SpringAppRouter();
